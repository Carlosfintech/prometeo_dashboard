#!/bin/bash

# Script para probar la conexi√≥n a la base de datos PostgreSQL
# Sin necesidad de ingresar contrase√±a manualmente

# Configurar la variable de entorno con la cadena de conexi√≥n
export DB_USER="postgres"
export DB_PASS="1111"
export DB_HOST="localhost"
export DB_PORT="5432"
export DB_NAME="prometeo_db"
export DATABASE_URL="postgresql+asyncpg://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}"

echo "üîß Configuraci√≥n:"
echo "   DATABASE_URL: ${DATABASE_URL}"

# Verificar si el entorno virtual est√° activado (para funcionalidad futura con Python)
if [[ -z "${VIRTUAL_ENV}" && -f "venv/bin/activate" ]]; then
    echo "‚ÑπÔ∏è Activando entorno virtual..."
    source venv/bin/activate
fi

# Funci√≥n para probar la conexi√≥n a la base de datos
function test_connection() {
    echo "üîç Comprobando conexi√≥n con PostgreSQL..."
    echo "   Intentando conectar a: ${DB_HOST}:${DB_PORT}/${DB_NAME}"
    
    # Intentar conexi√≥n con PSQL
    PGPASSWORD=$DB_PASS psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -c "SELECT 1 as connection_test;" > /dev/null 2>&1
    
    return $?
}

# Ejecutar prueba de conexi√≥n
test_connection

# Mostrar mensaje si la conexi√≥n fue exitosa
if [ $? -eq 0 ]; then
    echo "‚úÖ Prueba de conexi√≥n exitosa"
    echo "üìä Listado de tablas disponibles:"
    PGPASSWORD=1111 psql -h localhost -p 5432 -U postgres -d prometeo_db -c "\dt"
else
    echo "‚ùå Error en la prueba de conexi√≥n"
fi
